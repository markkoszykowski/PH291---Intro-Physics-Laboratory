# -*- coding: utf-8 -*-
"""PhysicsLab6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bS5aklWaLMQPwJStrA4PdJU8ybsyS6gS
"""

import matplotlib
import matplotlib.pyplot as plt
import numpy as np

#Data for Youngs (lengths in nanometers)
d = 1300.0
lamb = 650.0

#Data for plotting
theta = np.arange(-np.pi/2.0, np.pi/2.0, 0.001)
delta = (2.0 * np.pi/lamb) * d * np.sin(theta)
bigI = (np.cos(delta/2.0))**2

dovlamsintheta = (d/ lamb) * np.sin(theta)
fig, ax = plt.subplots()
ax.plot(dovlamsintheta, bigI)

ax.set(xlabel='position (d/lambda)*sin(theta)', ylabel='Intensity (I)', title='Youngs Double Slit Intensity')
ax.grid()

fig.savefig("youngs_ds.png")
plt.show()

import matplotlib
import matplotlib.pyplot as plt
import numpy as np

# Data for Youngs (lengths in nanometers)
d = 1000
lamb = 650.0

# Data for plotting
theta = np.linspace(-np.pi/2.0, np.pi/2.0, 10000)
delta = (2.0 * np.pi / lamb) * d * np.sin(theta)
bigI = (np.cos(delta/2.0))**2

dovlamsintheta = (d / lamb) * np.sin(theta)
fig, ax = plt.subplots()
ax.plot(dovlamsintheta, bigI, color = 'red')

ax.set(xlabel='position [(d/λ)sin(θ)]', ylabel='Intensity (I/I₀)', title='Youngs Double Slit Intensity')
ax.grid()
fig.savefig("youngs_ds.png")
plt.show()

import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.patches as mpatches

# Data for Youngs (lengths in nanometers)
d = 1000
lamb = 650.0

# Data for plotting
theta= np.linspace(-np.pi/2, np.pi/2, 10000)
delta = (2.0 * np.pi / lamb) * d * np.sin(theta)

I1 = (((np.sin((4*delta)/2.0))/(np.sin(delta/2.0)))**2) 
I2 = (((np.sin((16*delta)/2.0))/(np.sin(delta/2.0)))**2)
I3 = (((np.sin((256*delta)/2.0))/(np.sin(delta/2.0)))**2)

max1 = max(I1)
max2 = max(I2)
max3 = max(I3)

bigI1 = I1 / max1
bigI2 = I2 / max2
bigI3 = I3 / max3

dovlamsintheta = (d / lamb) * np.sin(theta)

fig, ax = plt.subplots()
ax.plot(dovlamsintheta, bigI1, color = 'red')
ax.plot(dovlamsintheta, bigI2, color = 'blue')
ax.plot(dovlamsintheta, bigI3, color = 'black')
ax.set(xlabel='position [(d/λ)sin(θ)]', ylabel='Intensity (I/I₀)', title='N Slit Interference Intensity')

red = mpatches.Patch(color='red', label='N = 4')
blue = mpatches.Patch(color='blue', label='N = 16')
black = mpatches.Patch(color='black', label='N = 256')
plt.legend(loc='upper right',handles=[red,blue,black],)
ax.grid()
fig.savefig("youngs_ds.png")
plt.show()

import matplotlib
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.patches as mpatches

# Data for Youngs (lengths in nanometers)
d = 1500.0
lambR = 700.0
lambB = 350.0

# Data for plotting
theta= np.linspace(-np.pi / 2.0, np.pi/ 2.0, 10000)
thetad = theta * (180/np.pi)
betaR = (np.pi/lambR) * d * np.sin(theta)
betaB = (np.pi/lambB) * d * np.sin(theta)
Red = ((np.sin(betaR))/(betaR))**2 
Blue = ((np.sin(betaB))/(betaB))**2

dovlamsinthetaR = (d / lambR) * np.sin(theta)
dovlamsinthetaB = (d / lambB) * np.sin(theta)

fig, ax = plt.subplots()
ax.plot(thetad, Red, color = 'red')
ax.plot(thetad, Blue, color = 'blue')

ax.set(xlabel='θ (°)', ylabel='Intensity (I/I₀)', title='Single Slit Diffraction Intensity')

red = mpatches.Patch(color='red', label='Red Light')
blue = mpatches.Patch(color='blue', label='Blue Light')

plt.legend(handles=[red,blue])

ax.grid()
fig.savefig("youngs_ds.png")
plt.show()

import matplotlib
import matplotlib.pyplot as plt
import numpy as np

# Data for Youngs (lengths in nanometers)
d1 = 4200
d2 = 1400
lamb = 700.0

# Data for plotting
theta = np.linspace(-np.pi/4, np.pi/4, 10000)
thetad = theta * (180/np.pi)
delta = (2.0 * np.pi / lamb) * d1 * np.sin(theta)
beta = (np.pi/lamb) * d2 * np.sin(theta)
bigISS = ((np.sin(beta))/(beta))**2
bigIDS = (np.cos(delta/2.0))**2
bigI = bigIDS * bigISS

dovlamsintheta = (d / lamb) * np.sin(theta)

fig, ax = plt.subplots()
ax.plot(thetad, bigIDS, color = 'red')
ax.plot(thetad, bigISS, color = 'black')
ax.plot(thetad, bigI, color = 'blue', linewidth = 3)

ax.set(xlabel='θ (°)', ylabel='Intensity (I/I₀)', title='Youngs Double Slit (Finite Slit Width) Intensity')

blue = mpatches.Patch(color='blue', label='Together')
black = mpatches.Patch(color='black', label='Diffraction')
red = mpatches.Patch(color='red', label='Interference')
plt.legend(loc='upper right',handles=[blue,black,red],)
ax.grid()
fig.savefig("youngs_ds.png")
plt.show()